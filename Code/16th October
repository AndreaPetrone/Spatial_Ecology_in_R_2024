# everytime you open R and need spatstat re-write it calling library(spatstat)
# vignettes is used to explain some additional stuff of the package with figures etc (in the download part of the dataset)
bey
plot(bei) #each point has coordinate X Y --> vector made by coordinates
#a ruster is an image composed by pixels 
densitymap <- density(bei) #let's pass from point to data, its the density of population over space and there are 2 groups of individuals clumped in the parts (lighter color)
# in R to speed up the process we use up arrow to recall functions
points(bei) #not so cool so change colour --> points(bei, col="green")
# in bei extra in spatstat we find covariate
bei.extra # we need the file called elev from file bei.extra (Ã¨ tutta la parte della scorsa lezione)
elevation2 <- bei.extra$elev #or elevation2 <- bei.extra [[1]] #the second way is more powerful because i skip the name and just use the number
elevation2<-bei.extra[[1]]
plot(elevation2)
#now what we want to do is to put in a multiframe more plots, in the one we make we have 1 row and 2 colons 
# in the par function we put the multiframe "mf" and row=1,2 (1 row 2 colons). 
# 1 and 2 are the dimensions of the multiframe and we use "c" to assign it to mf (multiframe)
par(mfrow=c(1,2))
# now in the first colon we put elevation2, so we do the multiframe first and then we put in it what we need
plot(elevation2)
plot(densitymap)
# inside the multiframe we have put elevation2 to left and density to the right, let's try to give some explanation 
# this are part of the landscape for trees (density) measure at the elevation (left), we can use one factor to understand the distribution of certain species
# in this case we can see the lower density is less matched with higher elevation
# now exercise -> maps one on top of the other and not next to the other
par(mfrow=c(2,1))
plot(elevation2)
plot(densitymap)
# now image to turn back to the plot of the single image, to do that and to plot one map instead of two separates, we need a new friend
# the friend is "dev.off" that is controlling multiple devices, in our case is the plotting window
# let's go back to the original plot(s)
dev.off
plot(elevation2) # now we see only the plot of elevation2
